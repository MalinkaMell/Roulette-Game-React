{"version":3,"sources":["components/roulette-game/weel/Weel.js","components/roulette-game/chips/Chips.js","components/roulette-game/table/Table.js","components/roulette-game/container/Roulette.js","components/roulette-game/calc/Logic.js","App.js","serviceWorker.js","index.js"],"names":["Weel","props","renderBtnText","state","text","spinAngleStart","Math","random","spinTimeTotal","startAngle","spinTime","arc","PI","options","length","spinTimer","baseSize","handleOnClick","bind","spin","rotate","this","drawRouletteWheel","stopRotateWheel","ctx","canvas","refs","getContext","outsideRadius","textRadius","insideRadius","clearRect","font","i","angle","fillStyle","color","beginPath","fill","save","translate","cos","sin","number","fillText","measureText","width","restore","strokeStyle","lineWidth","lineTo","stroke","setState","clearTimeout","spinAngle","easeOut","setTimeout","degrees","arcd","index","floor","updateNum","t","b","c","d","ts","type","value","className","id","onClick","Fragment","ref","height","Button","size","block","variant","React","Component","Chip","selected","num","selArr","includes","RouletteTable","nums","numChildren","currentNumber","coins","chip","style","zeroCol","n","firstRow","firstAndSecondBorder","secondRow","secondAndThirdBorder","thirdRow","thirdBorder","twoByOneCol","fourtRow","fifthRow","numsSelectionHandler","splice","indexOf","push","updateArr","updateCoins","console","log","map","arr","key","Roulette","count","wins","losses","message","toString","newCoinsCount","parseInt","prevState","Container","fluid","Row","Col","md","join","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.546868be.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Button } from 'react-bootstrap';\r\nimport './Weel.css';\r\nimport options from '../options.json';\r\n\r\n\r\nclass Weel extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      spinAngleStart: Math.random() * 10 + 10,\r\n      spinTimeTotal: Math.random() * 3 + 4 * 1000,\r\n      startAngle: 0,\r\n      spinTime: 0,\r\n      arc: Math.PI / (options.length / 2),\r\n      text: \"\"\r\n    }\r\n    this.spinTimer = null;\r\n    this.baseSize = 200;\r\n    this.handleOnClick = this.handleOnClick.bind(this);\r\n    this.spin = this.spin.bind(this);\r\n    this.rotate = this.rotate.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.drawRouletteWheel();\r\n  }\r\n  \r\n  componentWillUnmount(){\r\n    this.stopRotateWheel()\r\n  }\r\n\r\n  drawRouletteWheel() {\r\n    const baseSize = this.baseSize;\r\n    let { startAngle, arc } = this.state;\r\n    let ctx;\r\n    const canvas = this.refs.canvas;\r\n    if (canvas.getContext) {\r\n      const outsideRadius = baseSize - 45;\r\n      const textRadius = baseSize - 65;\r\n      const insideRadius = baseSize - 85;\r\n      const innderOutline = baseSize - 125;\r\n      ctx = canvas.getContext('2d');\r\n      ctx.clearRect(0, 0, 600, 600);\r\n\r\n      ctx.font = '14px Helvetica, Arial';\r\n      for (let i = 0; i < options.length; i++) {\r\n        const angle = startAngle + i * arc;\r\n        ctx.fillStyle = options[i].color;\r\n        ctx.beginPath();\r\n        ctx.arc(baseSize, baseSize, outsideRadius, angle, angle + arc, false);\r\n        ctx.arc(baseSize, baseSize, insideRadius, angle + arc, angle, true);\r\n        ctx.fill();\r\n        ctx.save();\r\n        ctx.fillStyle = 'white';\r\n        ctx.translate(baseSize + Math.cos(angle + arc / 2) * textRadius,\r\n          baseSize + Math.sin(angle + arc / 2) * textRadius);\r\n        ctx.rotate(angle + arc / 2 + Math.PI / 2);\r\n        const text = options[i].number;\r\n        ctx.fillText(text, -ctx.measureText(text).width / 2, 0);\r\n        ctx.restore();\r\n      }\r\n      //Arrow\r\n      ctx.strokeStyle = 'yellow'; //arrow\r\n      ctx.lineWidth = 2; //arrow\r\n      ctx.fillStyle = 'red';\r\n      ctx.beginPath();\r\n      ctx.lineTo(baseSize + 10, baseSize - (outsideRadius + 20));\r\n      ctx.lineTo(baseSize + 0, baseSize - (outsideRadius - 5));\r\n      ctx.lineTo(baseSize - 10, baseSize - (outsideRadius + 20));\r\n      ctx.fill();\r\n      ctx.stroke();\r\n    }\r\n  }\r\n\r\n  spin() {\r\n    this.spinTimer = null;\r\n    this.setState({ spinTime: 0 }, () => this.rotate());\r\n  }\r\n\r\n  rotate() {\r\n    const { spinAngleStart, spinTime, startAngle, spinTimeTotal } = this.state;\r\n    if (spinTime > 2800) {\r\n      clearTimeout(this.spinTimer);\r\n      this.stopRotateWheel();\r\n    } else {\r\n      const spinAngle = spinAngleStart - this.easeOut(spinTime, 0, spinAngleStart, spinTimeTotal);\r\n      this.setState({\r\n        startAngle: startAngle + spinAngle * Math.PI / 180,\r\n        spinTime: spinTime + 10,\r\n      }, () => {\r\n        this.drawRouletteWheel();\r\n        clearTimeout(this.spinTimer);\r\n        this.spinTimer = setTimeout(() => this.rotate(), 30);\r\n      })\r\n    }\r\n  }\r\n\r\n  stopRotateWheel() {\r\n    let { startAngle, arc } = this.state;\r\n    const baseSize = this.baseSize;\r\n    const canvas = this.refs.canvas;\r\n    const ctx = canvas.getContext('2d');\r\n    const degrees = startAngle * 180 / Math.PI + 90;\r\n    const arcd = arc * 180 / Math.PI;\r\n    const index = Math.floor((360 - degrees % 360) / arcd);\r\n    ctx.save();\r\n    ctx.font = 'bold 50px Helvetica, Arial';\r\n    const text = options[index].number;\r\n    this.setState({ text })\r\n    ctx.fillText(text, baseSize - ctx.measureText(text).width / 2, baseSize);\r\n    ctx.restore();\r\n    this.props.updateNum(this.state.text);\r\n  }\r\n  \r\n\r\n  easeOut(t, b, c, d) {\r\n    const ts = (t /= d) * t;\r\n    const tc = ts * t;\r\n    return b + c * (tc + -3 * ts + 3 * t);\r\n  }\r\n\r\n  handleOnClick() {\r\n    this.spin();\r\n  }\r\n\r\n  SpinButton() {\r\n    return (\r\n      <div>\r\n        <input type=\"button\" value=\"spin\" className=\"btn btn-primary p-2 m-2\" id=\"spin\" onClick={this.handleOnClick} />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  renderBtnText = () => {\r\n    if (this.state.text !== \"\") {\r\n      return (\r\n        <div>\r\n          <h1>{this.state.text}</h1>\r\n          <p>Click to Spin!</p>\r\n        </div>\r\n\r\n      )\r\n    } else {\r\n      return (<h5>Click to Spin!</h5>)\r\n    }\r\n  }\r\n\r\n  render() {\r\n    \r\n    //console.log(this.state.text)\r\n    return (\r\n      <React.Fragment>\r\n        <div className=\"roulette-container  align-self-center\">\r\n          <canvas ref=\"canvas\" width={this.baseSize * 2} height={this.baseSize * 2} className=\"roulette-canvas\"></canvas>\r\n          <Button\r\n            onClick={this.handleOnClick}\r\n            className=\"m-2 spin-button\"\r\n            size=\"lg\"\r\n            block variant=\"danger\">\r\n            {this.renderBtnText()}\r\n          </Button>\r\n        </div>\r\n      </React.Fragment>\r\n\r\n    );\r\n  }\r\n}\r\n\r\n\r\nexport default Weel;\r\n","import React from 'react';\r\nimport './Chips.css';\r\n\r\nconst Chip = (props) => {\r\n  let selected = props.selected;\r\n  let num = props.id;\r\n\r\n  if (selected && props.selArr.includes(num)) {\r\n    return (\r\n      <div className=\"chip\" id={props.id}>10</div>\r\n    )\r\n  } else if (!selected) {\r\n\r\n    return <div>{num}</div>\r\n\r\n  } else {\r\n\r\n    return <div>{num}</div>\r\n    \r\n  }\r\n\r\n}\r\nexport default Chip;","import React from 'react';\r\nimport './Table.css';\r\nimport Chip from '../chips/Chips';\r\n\r\nclass RouletteTable extends React.Component {\r\n\r\n  state = {\r\n    nums: [],\r\n    selected: false,\r\n    numChildren: 0,\r\n    currentNumber: 0,\r\n    coins: this.props.coins,\r\n    chip: this.props.chip\r\n  }\r\n\r\n  style = { \"background\": \"red\" }\r\n\r\n  componentDidMount() {\r\n    this.numsSelectionHandler = (num) => {\r\n\r\n      let nums = [...this.state.nums];\r\n\r\n      if (nums.includes(num)) {\r\n\r\n\r\n        nums.splice(nums.indexOf(num), 1);\r\n\r\n        this.setState({\r\n          numChildren: 0\r\n        });\r\n\r\n      } else {\r\n        this.setState({ selected: true });\r\n        nums.push(num);\r\n        this.setState({\r\n          numChildren: this.state.numChildren + 1\r\n        });\r\n      }\r\n      this.setState({ nums: nums }, () => {\r\n        this.props.updateArr(nums)\r\n      })\r\n\r\n\r\n      let coins = this.state.coins - this.state.chip;\r\n\r\n      this.setState({ coins: coins }, () => {\r\n        this.props.updateCoins(coins)\r\n      })\r\n\r\n      console.log(nums);\r\n    }\r\n  }\r\n\r\n\r\n\r\n  zeroCol = [\r\n    { n: \"00\", c: \"green\", className: \"greens cella-z-top chip-container-cella-z\" },\r\n    { n: \"\", c: \"\", className: \"space-z\" },\r\n    { n: \"0\", c: \"green\", className: \"greens cella-z-bottom chip-container-cella-z\" }]\r\n\r\n  firstRow = [\r\n    { n: \"3\", c: \"red\", className: \"red cella chip-container-cella\" },\r\n    { n: [\"3\", \"6\"], c: \"yellow\", className: \"bordo chip-container-bordo\" },\r\n    { n: \"6\", c: \"black\", className: \"black cella chip-container-cella\" },\r\n    { n: [\"6\", \"9\"], c: \"yellow\", className: \"bordo chip-container-bordo\" },\r\n    { n: \"9\", c: \"red\", className: \"red cella chip-container-cella\" },\r\n    { n: [\"9\", \"12\"], c: \"yellow\", className: \"bordo chip-container-bordo\" },\r\n    { n: \"12\", c: \"red\", className: \"red cella chip-container-cella\" },\r\n    { n: [\"12\", \"15\"], c: \"yellow\", className: \"bordo chip-container-bordo\" },\r\n    { n: \"15\", c: \"black\", className: \"black cella chip-container-cella\" },\r\n    { n: [\"15\", \"18\"], c: \"yellow\", className: \"bordo chip-container-bordo\" },\r\n    { n: \"18\", c: \"red\", className: \"red cella chip-container-cella\" },\r\n    { n: [\"18\", \"21\"], c: \"yellow\", className: \"bordo chip-container-bordo\" },\r\n    { n: \"21\", c: \"red\", className: \"red cella chip-container-cella\" },\r\n    { n: [\"21\", \"24\"], c: \"yellow\", className: \"bordo chip-container-bordo\" },\r\n    { n: \"24\", c: \"black\", className: \"black cella chip-container-cella\" },\r\n    { n: [\"24\", \"27\"], c: \"yellow\", className: \"bordo chip-container-bordo\" },\r\n    { n: \"27\", c: \"red\", className: \"red cella chip-container-cella\" },\r\n    { n: [\"27\", \"30\"], c: \"yellow\", className: \"bordo chip-container-bordo\" },\r\n    { n: \"30\", c: \"red\", className: \"red cella chip-container-cella\" },\r\n    { n: [\"30\", \"33\"], c: \"yellow\", className: \"bordo chip-container-bordo\" },\r\n    { n: \"33\", c: \"black\", className: \"black cella chip-container-cella\" },\r\n    { n: [\"33\", \"36\"], c: \"yellow\", className: \"bordo chip-container-bordo\" },\r\n    { n: \"36\", c: \"red\", className: \"red cella chip-container-cella\" }]\r\n\r\n  firstAndSecondBorder = [\r\n    { n: [\"3\", \"2\"], c: \"yellow\", className: \"bordo-h chip-container-bordo-h\" },\r\n    { n: \"\", c: \"\", className: \"space\" },\r\n    { n: [\"6\", \"5\"], c: \"yellow\", className: \"bordo-h chip-container-bordo-h\" },\r\n    { n: \"\", c: \"\", className: \"space\" },\r\n    { n: [\"9\", \"8\"], c: \"yellow\", className: \"bordo-h chip-container-bordo-h\" },\r\n    { n: \"\", c: \"\", className: \"space\" },\r\n    { n: [\"12\", \"11\"], c: \"yellow\", className: \"bordo-h chip-container-bordo-h\" },\r\n    { n: \"\", c: \"\", className: \"space\" },\r\n    { n: [\"15\", \"14\"], c: \"yellow\", className: \"bordo-h chip-container-bordo-h\" },\r\n    { n: \"\", c: \"\", className: \"space\" },\r\n    { n: [\"18\", \"17\"], c: \"yellow\", className: \"bordo-h chip-container-bordo-h\" },\r\n    { n: \"\", c: \"\", className: \"space\" },\r\n    { n: [\"21\", \"20\"], c: \"yellow\", className: \"bordo-h chip-container-bordo-h\" },\r\n    { n: \"\", c: \"\", className: \"space\" },\r\n    { n: [\"24\", \"23\"], c: \"yellow\", className: \"bordo-h chip-container-bordo-h\" },\r\n    { n: \"\", c: \"\", className: \"space\" },\r\n    { n: [\"27\", \"26\"], c: \"yellow\", className: \"bordo-h chip-container-bordo-h\" },\r\n    { n: \"\", c: \"\", className: \"space\" },\r\n    { n: [\"30\", \"29\"], c: \"yellow\", className: \"bordo-h chip-container-bordo-h\" },\r\n    { n: \"\", c: \"\", className: \"space\" },\r\n    { n: [\"33\", \"32\"], c: \"yellow\", className: \"bordo-h chip-container-bordo-h\" },\r\n    { n: \"\", c: \"\", className: \"space \" },\r\n    { n: [\"36\", \"35\"], c: \"yellow\", className: \"bordo-h chip-container-bordo-h\" }\r\n\r\n  ]\r\n\r\n  secondRow = [\r\n    { n: \"2\", c: \"black\", className: \"black cella chip-container-cella\" },\r\n    { n: [\"2\", \"5\"], c: \"yellow\", className: \"bordo chip-container-bordo\" },\r\n    { n: \"5\", c: \"red\", className: \"red cella chip-container-cella\" },\r\n    { n: [\"5\", \"8\"], c: \"yellow\", className: \"bordo chip-container-bordo\" },\r\n    { n: \"8\", c: \"black\", className: \"black cella chip-container-cella\" },\r\n    { n: [\"8\", \"11\"], c: \"yellow\", className: \"bordo chip-container-bordo\" },\r\n    { n: \"11\", c: \"black\", className: \"black cella chip-container-cella\" },\r\n    { n: [\"11\", \"14\"], c: \"yellow\", className: \"bordo chip-container-bordo\" },\r\n    { n: \"14\", c: \"red\", className: \"red cella chip-container-cella\" },\r\n    { n: [\"14\", \"17\"], c: \"yellow\", className: \"bordo chip-container-bordo\" },\r\n    { n: \"17\", c: \"black\", className: \"black cella chip-container-cella\" },\r\n    { n: [\"17\", \"20\"], c: \"yellow\", className: \"bordo chip-container-bordo\" },\r\n    { n: \"20\", c: \"black\", className: \"black cella chip-container-cella\" },\r\n    { n: [\"20\", \"23\"], c: \"yellow\", className: \"bordo chip-container-bordo\" },\r\n    { n: \"23\", c: \"red\", className: \"red cella chip-container-cella\" },\r\n    { n: [\"23\", \"26\"], c: \"yellow\", className: \"bordo chip-container-bordo\" },\r\n    { n: \"26\", c: \"black\", className: \"black cella chip-container-cella\" },\r\n    { n: [\"26\", \"29\"], c: \"yellow\", className: \"bordo chip-container-bordo\" },\r\n    { n: \"29\", c: \"black\", className: \"black cella chip-container-cella\" },\r\n    { n: [\"29\", \"32\"], c: \"yellow\", className: \"bordo chip-container-bordo\" },\r\n    { n: \"32\", c: \"red\", className: \"red cella chip-container-cella\" },\r\n    { n: [\"32\", \"35\"], c: \"yellow\", className: \"bordo chip-container-bordo\" },\r\n    { n: \"35\", c: \"black\", className: \"black cella chip-container-cella\" }]\r\n\r\n  secondAndThirdBorder = [\r\n    { n: [\"2\", \"1\"], c: \"yellow\", className: \"bordo-h chip-container-bordo-h\" },\r\n    { n: [\"1\", \"2\", \"3\", \"4\", \"5\", \"6\"], c: \"\", className: \"bet-space\" },\r\n    { n: [\"5\", \"4\"], c: \"yellow\", className: \"bordo-h chip-container-bordo-h\" },\r\n    { n: [\"4\", \"5\", \"6\", \"7\", \"8\", \"9\"], c: \"\", className: \"bet-space\" },\r\n    { n: [\"8\", \"7\"], c: \"yellow\", className: \"bordo-h chip-container-bordo-h\" },\r\n    { n: [\"7\", \"8\", \"9\", \"10\", \"11\", \"12\"], c: \"\", className: \"bet-space\" },\r\n    { n: [\"11\", \"10\"], c: \"yellow\", className: \"bordo-h chip-container-bordo-h\" },\r\n    { n: [\"10\", \"11\", \"12\", \"13\", \"14\", \"15\"], c: \"\", className: \"bet-space\" },\r\n    { n: [\"14\", \"13\"], c: \"yellow\", className: \"bordo-h chip-container-bordo-h\" },\r\n    { n: [\"13\", \"14\", \"15\", \"16\", \"17\", \"18\"], c: \"\", className: \"bet-space\" },\r\n    { n: [\"17\", \"16\"], c: \"yellow\", className: \"bordo-h chip-container-bordo-h\" },\r\n    { n: [\"16\", \"17\", \"18\", \"19\", \"20\", \"21\"], c: \"\", className: \"bet-space\" },\r\n    { n: [\"20\", \"19\"], c: \"yellow\", className: \"bordo-h chip-container-bordo-h\" },\r\n    { n: [\"19\", \"20\", \"21\", \"22\", \"23\", \"24\"], c: \"\", className: \"bet-space\" },\r\n    { n: [\"23\", \"22\"], c: \"yellow\", className: \"bordo-h chip-container-bordo-h\" },\r\n    { n: [\"22\", \"23\", \"24\", \"25\", \"26\", \"27\"], c: \"\", className: \"bet-space\" },\r\n    { n: [\"26\", \"25\"], c: \"yellow\", className: \"bordo-h chip-container-bordo-h\" },\r\n    { n: [\"25\", \"26\", \"27\", \"28\", \"29\", \"30\"], c: \"\", className: \"bet-space\" },\r\n    { n: [\"29\", \"28\"], c: \"yellow\", className: \"bordo-h chip-container-bordo-h\" },\r\n    { n: [\"28\", \"29\", \"30\", \"31\", \"32\", \"33\"], c: \"\", className: \"bet-space\" },\r\n    { n: [\"32\", \"31\"], c: \"yellow\", className: \"bordo-h chip-container-bordo-h\" },\r\n    { n: [\"31\", \"32\", \"33\", \"34\", \"35\", \"36\"], c: \"\", className: \"bet-space\" },\r\n    { n: [\"35\", \"34\"], c: \"yellow\", className: \"bordo-h chip-container-bordo-h\" }\r\n\r\n  ]\r\n\r\n  thirdRow = [\r\n    { n: \"1\", c: \"red\", className: \"red cella chip-container-cella\" },\r\n    { n: [\"1\", \"4\"], c: \"yellow\", className: \"bordo chip-container-bordo\" },\r\n    { n: \"4\", c: \"black\", className: \"black cella chip-container-cella\" },\r\n    { n: [\"4\", \"7\"], c: \"yellow\", className: \"bordo chip-container-bordo\" },\r\n    { n: \"7\", c: \"red\", className: \"red cella chip-container-cella\" },\r\n    { n: [\"7\", \"10\"], c: \"yellow\", className: \"bordo chip-container-bordo\" },\r\n    { n: \"10\", c: \"black\", className: \"black cella chip-container-cella\" },\r\n    { n: [\"10\", \"13\"], c: \"yellow\", className: \"bordo chip-container-bordo\" },\r\n    { n: \"13\", c: \"black\", className: \"black cella chip-container-cella\" },\r\n    { n: [\"13, 16\"], c: \"yellow\", className: \"bordo chip-container-bordo\" },\r\n    { n: \"16\", c: \"red\", className: \"red cella chip-container-cella\" },\r\n    { n: [\"16\", \"19\"], c: \"yellow\", className: \"bordo chip-container-bordo\" },\r\n    { n: \"19\", c: \"red\", className: \"red cella chip-container-cella\" },\r\n    { n: [\"19\", \"22\"], c: \"yellow\", className: \"bordo chip-container-bordo\" },\r\n    { n: \"22\", c: \"black\", className: \"black cella chip-container-cella\" },\r\n    { n: [\"22\", \"25\"], c: \"yellow\", className: \"bordo chip-container-bordo\" },\r\n    { n: \"25\", c: \"red\", className: \"red cella chip-container-cella\" },\r\n    { n: [\"25\", \"28\"], c: \"yellow\", className: \"bordo chip-container-bordo\" },\r\n    { n: \"28\", c: \"black\", className: \"black cella chip-container-cella\" },\r\n    { n: [\"28\", \"31\"], c: \"yellow\", className: \"bordo chip-container-bordo\" },\r\n    { n: \"31\", c: \"black\", className: \"black cella chip-container-cella\" },\r\n    { n: [\"31\", \"24\"], c: \"yellow\", className: \"bordo chip-container-bordo\" },\r\n    { n: \"34\", c: \"red\", className: \"red cella chip-container-cella\" }]\r\n\r\n  thirdBorder = [\r\n    { n: [\"1\", \"2\", \"3\"], c: \"yellow\", className: \"bordo-h chip-container-bordo-h\" },\r\n    { n: \"\", c: \"\", className: \"space\" },\r\n    { n: [\"4\", \"5\", \"6\"], c: \"yellow\", className: \"bordo-h chip-container-bordo-h\" },\r\n    { n: \"\", c: \"\", className: \"space\" },\r\n    { n: [\"7\", \"8\", \"9\"], c: \"yellow\", className: \"bordo-h chip-container-bordo-h\" },\r\n    { n: \"\", c: \"\", className: \"space\" },\r\n    { n: [\"10\", \"11\", \"12\"], c: \"yellow\", className: \"bordo-h chip-container-bordo-h\" },\r\n    { n: \"\", c: \"\", className: \"space\" },\r\n    { n: [\"13\", \"14\", \"15\"], c: \"yellow\", className: \"bordo-h chip-container-bordo-h\" },\r\n    { n: \"\", c: \"\", className: \"space\" },\r\n    { n: [\"16\", \"17\", \"18\"], c: \"yellow\", className: \"bordo-h chip-container-bordo-h\" },\r\n    { n: \"\", c: \"\", className: \"space\" },\r\n    { n: [\"19\", \"20\", \"21\"], c: \"yellow\", className: \"bordo-h chip-container-bordo-h\" },\r\n    { n: \"\", c: \"\", className: \"space\" },\r\n    { n: [\"22\", \"23\", \"24\"], c: \"yellow\", className: \"bordo-h chip-container-bordo-h\" },\r\n    { n: \"\", c: \"\", className: \"space\" },\r\n    { n: [\"25\", \"26\", \"27\"], c: \"yellow\", className: \"bordo-h chip-container-bordo-h\" },\r\n    { n: \"\", c: \"\", className: \"space\" },\r\n    { n: [\"28\", \"29\", \"30\"], c: \"yellow\", className: \"bordo-h chip-container-bordo-h\" },\r\n    { n: \"\", c: \"\", className: \"space\" },\r\n    { n: [\"31\", \"32\", \"33\"], c: \"yellow\", className: \"bordo-h chip-container-bordo-h\" },\r\n    { n: \"\", c: \"\", className: \"space\" },\r\n    { n: [\"34\", \"3536\"], c: \"yellow\", className: \"bordo-h chip-container-bordo-h\" }\r\n\r\n  ]\r\n\r\n  twoByOneCol = [\r\n    { n: \"2:1:1\", c: \"blue\", className: \"blues cella chip-container-cella\" },\r\n    { n: \"\", c: \"\", className: \"space-2by1\" },\r\n    { n: \"2:1:2\", c: \"blue\", className: \"blues cella chip-container-cella\" },\r\n    { n: \"\", c: \"\", className: \"space-2by1\" },\r\n    { n: \"2:1:3\", c: \"blue\", className: \"blues cella chip-container-cella\" },\r\n    { n: \"\", c: \"\", className: \"space-2by1\" }]\r\n\r\n  fourtRow = [\r\n    { n: \"1st 12\", c: \"blue\", className: \"blues cella-fourth chip-container-cella-fourth\" },\r\n    { n: \"\", c: \"\", className: \"space-fourth\" },\r\n    { n: \"2nd 12\", c: \"blue\", className: \"blues cella-fourth chip-container-cella-fourth\" },\r\n    { n: \"\", c: \"\", className: \"space-fourth\" },\r\n    { n: \"3rd 12\", c: \"blue\", className: \"blues cella-fourth chip-container-cella-fourth\" }]\r\n\r\n  fifthRow = [\r\n    { n: \"1 to 18\", c: \"blue\", className: \"blues cella-fifth chip-container-cella-fifth\" },\r\n    { n: \"\", c: \"\", className: \"space-fourth\" },\r\n    { n: \"Even\", c: \"blue\", className: \"blues cella-fifth chip-container-cella-fifth\" },\r\n    { n: \"\", c: \"\", className: \"space-fourth\" },\r\n    { n: \"Red\", c: \"blue\", className: \"reds cella-fifth chip-container-cella-fifth\" },\r\n    { n: \"\", c: \"\", className: \"space-fourth\" },\r\n    { n: \"Black\", c: \"blue\", className: \"blacks cella-fifth chip-container-cella-fifth\" },\r\n    { n: \"\", c: \"\", className: \"space-fourth\" },\r\n    { n: \"Odd\", c: \"blue\", className: \"blues cella-fifth chip-container-cella-fifth\" },\r\n    { n: \"\", c: \"\", className: \"space-fourth\" },\r\n    { n: \"19 to 36\", c: \"blue\", className: \"blues cella-fifth chip-container-cella-fifth\" }\r\n  ]\r\n\r\n\r\n  render() {\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <div className=\"d-flex flex-row \">\r\n          <div className=\"align-self-start\">\r\n            <ul className=\"list-unstyled pt-6\">\r\n              {\r\n                this.zeroCol.map((num, index, arr) =>\r\n                  <li\r\n                    key={num.n + index + arr}\r\n                    className={num.className}\r\n                    value={num.n}\r\n                    onClick={() => this.numsSelectionHandler(num.n)}>\r\n                    {<Chip id={num.n} selected={this.state.selected} selArr={[...this.state.nums]} />}\r\n                  </li>)\r\n              }\r\n            </ul>\r\n          </div>\r\n          <div className=\"align-self-start\">\r\n            <div className=\"divider\"></div>\r\n            {/* First row */}\r\n            <ul className=\"d-flex list-unstyled\">\r\n              {\r\n                this.firstRow.map((num, index, arr) =>\r\n                  <li\r\n                    key={num.n + index + arr}\r\n                    className={num.className}\r\n                    value={num.n}\r\n                    onClick={() => this.numsSelectionHandler(num.n)}>\r\n                    {<Chip id={num.n} selected={this.state.selected} selArr={[...this.state.nums]} />}\r\n                  </li>)\r\n              }\r\n            </ul>\r\n            {/* Between first and second rows borders */}\r\n            <ul className=\"d-flex list-unstyled\">\r\n              {\r\n                this.firstAndSecondBorder.map((num, index, arr) =>\r\n                  <li\r\n                    key={num.n + index + arr}\r\n                    className={num.className}\r\n                    value={num.n}\r\n                    onClick={() => this.numsSelectionHandler(num.n)}>\r\n                    {<Chip id={num.n} selected={this.state.selected} selArr={[...this.state.nums]} />}\r\n                  </li>)\r\n              }\r\n            </ul>\r\n            {/* Second row */}\r\n            <ul className=\"d-flex list-unstyled\">\r\n              {\r\n                this.secondRow.map((num, index, arr) =>\r\n                  <li\r\n                    key={num.n + index + arr}\r\n                    className={num.className}\r\n                    value={num.n}\r\n                    onClick={() => this.numsSelectionHandler(num.n)}>\r\n                    {<Chip id={num.n} selected={this.state.selected} selArr={[...this.state.nums]} />}\r\n                  </li>)\r\n              }\r\n            </ul>\r\n            {/* Between second and thirs rows borders */}\r\n            <ul className=\"d-flex list-unstyled\">\r\n              {\r\n                this.thirdBorder.map((num, index, arr) =>\r\n                  <li\r\n                    key={num.n + index + arr}\r\n                    className={num.className}\r\n                    value={num.n}\r\n                    onClick={() => this.numsSelectionHandler(num.n)}>\r\n                    {<Chip id={num.n} selected={this.state.selected} selArr={[...this.state.nums]} />}\r\n                  </li>)\r\n              }\r\n            </ul>\r\n            {/* Third row */}\r\n            <ul className=\"d-flex list-unstyled\">\r\n              {\r\n                this.thirdRow.map((num, index, arr) =>\r\n                  <li\r\n                    key={num.n + index + arr}\r\n                    className={num.className}\r\n                    value={num.n}\r\n                    onClick={() => this.numsSelectionHandler(num.n)}>\r\n                    {<Chip id={num.n} selected={this.state.selected} selArr={[...this.state.nums]} />}\r\n                  </li>)\r\n              }\r\n            </ul>\r\n            {/* Between second and thirs rows borders */}\r\n            <ul className=\"d-flex list-unstyled\">\r\n              {\r\n                this.secondAndThirdBorder.map((num, index, arr) =>\r\n                  <li\r\n                    key={num.n + index + arr}\r\n                    className={num.className}\r\n                    value={num.n}\r\n                    onClick={() => this.numsSelectionHandler(num.n)}>\r\n                    {<Chip id={num.n} selected={this.state.selected} selArr={[...this.state.nums]} />}\r\n                  </li>)\r\n              }\r\n            </ul>\r\n            {/* Fourth row */}\r\n            <ul className=\"d-flex list-unstyled\">\r\n              {\r\n                this.fourtRow.map((num, index, arr) =>\r\n                  <li\r\n                    key={num.n + index + arr}\r\n                    className={num.className}\r\n                    value={num.n}\r\n                    onClick={() => this.numsSelectionHandler(num.n)}>\r\n                    {<Chip id={num.n} selected={this.state.selected} selArr={[...this.state.nums]} />}\r\n                  </li>)\r\n              }\r\n            </ul>\r\n            <div className=\"divider\"></div>\r\n            {/* Fifth row */}\r\n            <ul className=\"d-flex list-unstyled\">\r\n              {\r\n                this.fifthRow.map((num, index, arr) =>\r\n                  <li\r\n                    key={num.n + index + arr}\r\n                    className={num.className}\r\n                    value={num.n}\r\n                    onClick={() => this.numsSelectionHandler(num.n)}>\r\n                    {<Chip id={num.n} selected={this.state.selected} selArr={[...this.state.nums]} />}\r\n                  </li>)\r\n              }\r\n            </ul>\r\n            <div className=\"divider\"></div>\r\n          </div>\r\n          <div className=\"align-self-start\">\r\n            <div className=\"divider\"></div>\r\n            <ul className=\"list-unstyled\">\r\n              {\r\n                this.twoByOneCol.map((num, index, arr) =>\r\n                  <li\r\n                    key={num.n + index + arr}\r\n                    className={num.className}\r\n                    value={num.n}\r\n                    onClick={() => this.numsSelectionHandler(num.n)}>\r\n                    {<Chip id={num.n} selected={this.state.selected} selArr={[...this.state.nums]} />}\r\n                  </li>)\r\n              }\r\n            </ul>\r\n          </div>\r\n        </div >\r\n      </React.Fragment>\r\n\r\n    )\r\n  }\r\n\r\n\r\n}\r\n\r\nexport default RouletteTable;","import React from 'react';\r\nimport './Roulette.css';\r\nimport Weel from '../weel/Weel';\r\nimport RouletteTable from '../table/Table';\r\nimport { Container, Row, Col } from 'react-bootstrap';\r\n\r\nclass Roulette extends React.Component {\r\n  state = {\r\n    num: '',\r\n    arr: [],\r\n    //compare: this.props.compare,\r\n    count: 0,\r\n    wins: 0,\r\n    chip: 10,\r\n    coins: 300,\r\n    losses: 0,\r\n    message: \"Nothing to say\"\r\n  }\r\n\r\n\r\n  updateNum = (num) => {\r\n\r\n    this.setState({ num });\r\n\r\n    this.setState({ count: this.state.count + 1 });\r\n\r\n    if (this.state.num !== \"\") {\r\n      //single number win/loss\r\n      if (this.state.arr.includes(this.state.num.toString())) {\r\n        //if i win\r\n        let newCoinsCount = 35 * parseInt(this.state.chip)\r\n        this.setState((prevState) => ({ wins: prevState.wins + 1 }))\r\n        this.setState({ message: `You won ${newCoinsCount} coins!` });\r\n        this.setState({coins: this.state.coins + newCoinsCount})\r\n        /* this.setState({ wins: this.state.wins +1 }, () => {\r\n          this.props.updateWins(this.state.wins)\r\n        }) */\r\n      } else {\r\n        console.log(\"looser\");\r\n        this.setState({ message: `You loose :(` });\r\n        this.setState((prevState) => ({ losses: prevState.losses + 1 }));\r\n        \r\n        // this.setState({losses: 1})\r\n      }\r\n    }\r\n  }\r\n  updateArr = (arr) => {\r\n    this.setState({ arr })\r\n  }\r\n\r\n  updateCoins = (coins) => {\r\n    this.setState({ coins })\r\n  }\r\n\r\n  /*   updateRes = (action) => {\r\n      switch (action) {\r\n        case \"win\":\r\n          this.setState({wins: this.state.wins + 1})\r\n          break;\r\n        case \"lost\":\r\n          this.setState({losses: this.state.losses + 1})\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n      this.setState({count: this.state.count + 1})\r\n    } */\r\n\r\n\r\n  render() {\r\n    return (\r\n      <Container fluid className=\"table\">\r\n        <Row className=\"align-items-start\">\r\n          <Col>\r\n            <RouletteTable\r\n              updateArr={this.updateArr}\r\n              updateCoins={this.updateCoins}\r\n              num={this.state.num}\r\n              arr={this.state.arr}\r\n              count={this.state.count}\r\n              coins={this.state.coins}\r\n              chip={this.state.chip}\r\n            />\r\n            <Container>\r\n              <Row className=\"bg-red bg-bets\">\r\n                <Col md={12}>\r\n                  <div className=\"bets text-left\">\r\n                    <p>Your coins: <span>{this.state.coins}</span></p>\r\n                    <p>Your bets: <span>{this.state.arr.join(\", \")}</span></p>\r\n                  </div>\r\n                </Col>\r\n              </Row>\r\n              <Row className=\"bg-red bg-verdict\">\r\n                <Col md={4}>\r\n                  <div className=\"text-center mt-2\">\r\n                    <h6>Spins: {this.state.count}</h6>\r\n                    <h6>Wins: {this.state.wins}</h6>\r\n                    <h6>Losses: {this.state.losses}</h6>\r\n                  </div>\r\n                </Col>\r\n                <Col md={4}>\r\n                  <div className=\"text-center mt-2\">\r\n                    <p>{this.state.message}</p>\r\n                  </div>\r\n                </Col>\r\n              </Row>\r\n            </Container>\r\n          </Col>\r\n          <Col className=\"align-self-center justify-content-center\">\r\n            <Weel\r\n              updateNum={this.updateNum}\r\n              num={this.state.num}\r\n              arr={this.state.arr}\r\n              count={this.state.count}\r\n            />\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Roulette;\r\n\r\n\r\n/* //winning number: 35 to 1\r\n  //Split: 17 to 1\r\n  //Corner(one of four) 8 to 1\r\n\r\n  //0, 00, 1, 2, or 3: To take this bet, place a chip on the outside line that divides the 0 and 1. You will be paid 6 to 1 if any of these numbers come up.\r\n\r\n  //This is betting that one of six numbers in two adjacent rows will come up. Place a chip in between two rows on the outside line. If the ball lands on any number in the two rows, you will be paid 6 to 1.\r\n\r\n\r\n  //red: 1:1\r\n  //black: 1:1\r\n  //even: 1:1\r\n  //odd: 1:1\r\n  //1 to 18: 1:1\r\n  //19 to 36: 1:1\r\n  //1st 12: 2:1\r\n  //2nd 12: 2:1\r\n  //3rd 12: 2:1\r\n  //2 to 1: 2:1 */","import React from 'react';\r\nimport './Styles.css';\r\nimport { Container, Row, Col } from 'react-bootstrap';\r\nclass Game extends React.Component {\r\n\r\n  coins = this.props.coins\r\n  state = {\r\n    chip: 10,\r\n    coins: 300,\r\n    wins: 0,\r\n    losses: 0,\r\n    message: \"Nothing to say\"\r\n  }\r\n\r\n  \r\n  componentWillUpdate() {\r\n   // console.log(\"arr: \" + this.props.arr);\r\n  //  console.log(\"num: \" + this.props.num);\r\n    if (this.props.num !== \"\") {\r\n      //single number win/loss\r\n      if (this.props.arr.includes(this.props.num.toString())) {\r\n\r\n        \r\n        this.setState((prevState) => ({ wins: prevState.wins + 1 }))\r\n        \r\n        this.setState({message: `You won ${35 * parseInt(this.state.chip)} coins!`});\r\n        /* this.setState({ wins: this.state.wins +1 }, () => {\r\n          this.props.updateWins(this.state.wins)\r\n        }) */\r\n      } else {\r\n        console.log(\"looser\");\r\n        this.setState({message: `You loose :()`});\r\n        this.setState((prevState) => ({ losses: prevState.losses + 1 }))\r\n       // this.setState({losses: 1})\r\n      }\r\n    }\r\n\r\n    \r\n  }\r\n\r\n  componentWillUnmount() {\r\n\r\n  }\r\n\r\n  regularNumbersArray = [\"00\", \"0\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"10\", \"11\", \"12\", \"13\", \"14\", \"15\", \"16\", \"17\", \"18\", \"19\", \"20\", \"21\", \"22\", \"23\", \"24\", \"25\", \"26\", \"27\", \"28\", \"29\", \"30\", \"31\", \"32\", \"33\", \"34\", \"35\", \"36\"]\r\n\r\n  doubleNumbersArray = [[\"3\", \"6\"], [\"6\", \"9\"], [\"9\", \"12\"], [\"12\", \"15\"], [\"15\", \"18\"], [\"18\", \"21\"], [\"21\", \"24\"], [\"24\", \"27\"], [\"27\", \"30\"], [\"30\", \"33\"], [\"33\", \"36\"], [\"3\", \"2\"], [\"6\", \"5\"], [\"9\", \"8\"], [\"12\", \"11\"], [\"15\", \"14\"], [\"18\", \"17\"], [\"21\", \"20\"], [\"24\", \"23\"], [\"27\", \"26\"], [\"30\", \"29\"], [\"33\", \"32\"], [\"36\", \"35\"], [\"2\", \"5\"], [\"5\", \"8\"], [\"8\", \"1\"], [\"11\", \"14\"], [\"14\", \"17\"], [\"17\", \"20\"], [\"20\", \"23\"], [\"23\", \"26\"], [\"26\", \"29\"], [\"29\", \"32\"], [\"32\", \"35\"], [\"2\", \"1\"], [\"5\", \"4\"], [\"8\", \"7\"], [\"11\", \"10\"], [\"14\", \"13\"], [\"17\", \"16\"], [\"20\", \"19\"], [\"23\", \"22\"], [\"26\", \"25\"], [\"29\", \"28\"], [\"32\", \"31\"], [\"35\", \"34\"], [\"1\", \"4\"], [\"4\", \"7\"], [\"7\", \"10\"], [\"10\", \"13\"], [\"13\", \"16\"], [\"16\", \"19\"], [\"19\", \"22\"], [\"22\", \"25\"], [\"25\", \"28\"], [\"28\", \"31\"], [\"31\", \"24\"]]\r\n\r\n  tripleNumbersArray = [[\"1\", \"2\", \"3\"], [\"4\", \"5\", \"5\"], [\"7\", \"8\", \"9\"], [\"10\", \"11\", \"12\"], [\"13\", \"14\", \"15\"],\r\n  [\"16\", \"17\", \"18\"], [\"19\", \"20\", \"21\"], [\"22\", \"23\", \"24\"], [\"25\", \"26\", \"27\"], [\"28\", \"29\", \"30\"], [\"31\", \"32\", \"33\"], [\"34\", \"35\", \"36\"]]\r\n\r\n  sixNumbersArray = [[\"1\", \"2\", \"3\", \"4\", \"5\", \"6\"], [\"4\", \"5\", \"6\", \"7\", \"8\", \"9\"], [\"7\", \"8\", \"9\", \"10\", \"11\", \"12\"], [\"10\", \"11\", \"12\", \"13\", \"14\", \"15\"], [\"13\", \"14\", \"15\", \"16\", \"17\", \"18\"], [\"16\", \"17\", \"18\", \"19\", \"20\", \"21\"], [\"19\", \"20\", \"21\", \"22\", \"23\", \"24\"], [\"22\", \"23\", \"24\", \"25\", \"26\", \"27\"], [\"25\", \"26\", \"27\", \"28\", \"29\", \"30\"], [\"31\", \"32\", \"33\", \"34\", \"35\", \"36\"]]\r\n\r\n  whoByOne = [[\"3\", \"6\", \"2\", \"12\", \"15\", \"18\", \"21\", \"24\", \"27\", \"30\", \"33\", \"36\"], [\"2\", \"5\", \"8\", \"11\", \"14\", \"17\", \"20\", \"23\", \"26\", \"29\", \"32\", \"35\"], [\"1\", \"4\", \"7\", \"10\", \"13\", \"16\", \"19\", \"22\", \"25\", \"28\", \"31\", \"34\"]]\r\n\r\n  twelves = [[\"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"10\", \"11\", \"12\"], [\"13\", \"14\", \"15\", \"16\", \"17\", \"18\", \"19\", \"20\", \"21\", \"22\", \"23\", \"24\"], [\"25\", \"26\", \"27\", \"28\", \"29\", \"30\", \"31\", \"32\", \"33\", \"34\", \"35\", \"36\"]]\r\n\r\n  eighteen = [[\"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"10\", \"11\", \"12\", \"13\", \"14\", \"15\", \"16\", \"17\", \"18\"], [\"19\", \"20\", \"21\", \"22\", \"23\", \"24\", \"25\", \"26\", \"27\", \"28\", \"29\", \"30\", \"31\", \"32\", \"33\", \"34\", \"35\", \"36\"]]\r\n\r\n  blacks = [\"2\", \"4\", \"6\", \"8\", \"10\", \"11\", \"13\", \"15\", \"17\", \"20\", \"22\", \"24\", \"26\", \"28\", \"29\", \"31\", \"33\", \"35\"]\r\n  reds = ['1', '3', '5', '7', '9', '12', '14', '16', '18', '19', '21', '23', '25', '27', '30', '32', '34', '36']\r\n\r\n\r\n  /* singleNum = (num, bets) => {\r\n    if (num !== \"\") {\r\n      //single number win/loss\r\n      if (bets.includes(num.toString())) {\r\n        let newTotal = `You won ${35 * parseInt(this.state.chip)} coins!`;\r\n        return newTotal;\r\n      } else {\r\n        return \"You lost :( \";\r\n      }\r\n    }\r\n  } */\r\n\r\n\r\n  render() {\r\n    let bets = this.props.arr;\r\n    let num = this.props.num;\r\n    return (\r\n      <Container>\r\n        <Row className=\"bg-red bg-bets\">\r\n          <Col md={12}>\r\n            <div className=\"bets text-left\">\r\n              Your bets: <span>{this.props.arr.join(\", \")}</span>\r\n            </div>\r\n          </Col>\r\n        </Row>\r\n        <Row className=\"bg-red bg-verdict\">\r\n          <Col md={4}>\r\n            <div className=\"text-center mt-2\">\r\n              <h6>Spins: {this.props.count}</h6>\r\n              <h6>Wins: {this.state.wins}</h6>\r\n              <h6>Losses: {this.state.losses}</h6>\r\n            </div>\r\n          </Col>\r\n          <Col md={4}>\r\n            <div className=\"text-center mt-2\">\r\n              <p>{this.state.message}</p>\r\n            </div>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n\r\n\r\n    );\r\n  }\r\n\r\n\r\n}\r\n\r\n\r\nexport default Game;\r\n\r\n/* //winning number: 35 to 1\r\n  //Split: 17 to 1\r\n  //Corner(one of four) 8 to 1\r\n\r\n  //0, 00, 1, 2, or 3: To take this bet, place a chip on the outside line that divides the 0 and 1. You will be paid 6 to 1 if any of these numbers come up.\r\n\r\n  //This is betting that one of six numbers in two adjacent rows will come up. Place a chip in between two rows on the outside line. If the ball lands on any number in the two rows, you will be paid 6 to 1.\r\n\r\n\r\n  //red: 1:1\r\n  //black: 1:1\r\n  //even: 1:1\r\n  //odd: 1:1\r\n  //1 to 18: 1:1\r\n  //19 to 36: 1:1\r\n  //1st 12: 2:1\r\n  //2nd 12: 2:1\r\n  //3rd 12: 2:1\r\n  //2 to 1: 2:1 */","import React from 'react';\nimport './App.css';\nimport Roulette from './components/roulette-game/container/Roulette';\nimport Calc from './components/roulette-game/calc/Calc';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n     <Roulette />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}